<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <RootNamespace>AsyncWaitHandle</RootNamespace>
    <TargetFramework>netstandard2.0</TargetFramework>

    <Nullable>enable</Nullable>

    <!-- Use embedded PDB mode to improve diagnosing and debugging experience. -->
    <DebugType>embedded</DebugType>

    <SignAssembly>true</SignAssembly>
    <AssemblyOriginatorKeyFile>$(MSBuildThisFileDirectory)..\build\AsyncWaitHandle.snk</AssemblyOriginatorKeyFile>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DocumentationFile>bin\Release\AsyncWaitHandle.xml</DocumentationFile>
  </PropertyGroup>

  <PropertyGroup>
    <Version>2.0.0.0</Version>

    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>

    <!-- Remove if merged into main branch of original AsyncWaitHandle repo -->
    <PackageId>AsyncWaitHandle2</PackageId>

    <Company>Serge Semenov</Company>
    <Copyright>Copyright (c) 2017-2021</Copyright>
    <Description>Async-await extensions for WaitHandle</Description>
    <Product>AsyncWaitHandle</Product>
    <PackageProjectUrl>https://github.com/kind-serge/AsyncWaitHandle</PackageProjectUrl>
    <RepositoryUrl>https://github.com/kind-serge/AsyncWaitHandle</RepositoryUrl>
    <PackageDescription>Use C#/VB await keyword with AutoResetEvent, ManualResetEvent, or Semaphore in .NET apps.</PackageDescription>
    <PackageTags>WaitHandle async await AutoResetEvent ManualResetEvent Semaphore</PackageTags>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <AllowedOutputExtensionsInPackageBuildOutputFolder>$(AllowedOutputExtensionsInPackageBuildOutputFolder);.xml</AllowedOutputExtensionsInPackageBuildOutputFolder>

  </PropertyGroup>

</Project>
